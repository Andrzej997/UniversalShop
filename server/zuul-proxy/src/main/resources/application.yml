---
spring:
  profiles: development
  application:
    name: zuul-proxy
  cloud:
    config:
      uri: https://localhost:8888
      discovery:
        serviceId: config-server
      fail-fast: false
  http:
    multipart:
      max-file-size: 25600MB
      max-request-size: 25600MB
server:
  port: 8080
  ssl:
    key-store: classpath:keystore.jks
    key-store-password: password
    key-alias: localhost
    trust-store: classpath:truststore.jks
    trust-store-password: password
eureka:
  instance:
    hostname: zuul-proxy
    leaseRenewalIntervalInSeconds: 1
    leaseExpirationDurationInSeconds: 2
    preferIpAddress: true
    non-secure-port-enabled: false
    secure-port-enabled: true
    secure-port: ${server.port}
    secureVirtualHostName: ${spring.application.name}
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
    instanceInfoReplicationIntervalSeconds: 5
    initialInstanceInfoReplicationIntervalSeconds: 5
    eureka-connection-idle-timeout-seconds: 6000
    serviceUrl:
      defaultZone: https://localhost:8761/eureka/
zuul:
  ignoredServices: "*"
  ssl-hostname-validation-enabled: false
  routes:
    shop-service:
      path: /shop/**
      serviceId: shop-service
endpoints:
  restart:
    enabled: true
  shutdown:
    enabled: true
  health:
    sensitive: false
security:
  basic:
    enabled: false
  oauth2:
    resource:
      userInfoUri: https://localhost:8081/spring-security-oauth-server/user
ribbon:
    IsSecure: true
---
spring:
  profiles: cloud
  application:
    name: zuul-proxy
  cloud:
    config:
      uri: ${vcap.services.${PREFIX:}config-server.credentials.uri:https://${PREFIX:}${config-server.${application.domain:cfapps.io}}}
      discovery:
        serviceId: config-server
      fail-fast: true
---
spring:
  profiles: docker
  application:
    name: zuul-proxy
  cloud:
    config:
      uri: https://config-server:8888
      discovery:
        serviceId: config-server
      fail-fast: true